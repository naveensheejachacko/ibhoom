{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "Local Vendor Marketplace API",
		"description": "Complete API collection for the Local Vendor Marketplace backend\n\n## Authentication\n- All protected endpoints require JWT Bearer token\n- Get token from login endpoint\n- Token expires in 30 minutes\n\n## Default Admin Credentials\n- Email: admin@marketplace.com\n- Password: admin123\n\n## Base URL\n- Local: http://localhost:8000",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Test if the API is running"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Health check endpoint"
					},
					"response": []
				}
			],
			"description": "Basic health check endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    pm.environment.set('refresh_token', response.refresh_token);",
									"    pm.test('Access token saved', function () {",
									"        pm.expect(response.access_token).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@marketplace.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login with default admin credentials"
					},
					"response": []
				},
				{
					"name": "Seller Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('seller_access_token', response.access_token);",
									"    pm.environment.set('seller_refresh_token', response.refresh_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"seller@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login as seller (register first)"
					},
					"response": []
				},
				{
					"name": "Customer Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('customer_access_token', response.access_token);",
									"    pm.environment.set('customer_refresh_token', response.refresh_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login as customer (register first)"
					},
					"response": []
				},
				{
					"name": "Get Current User (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get current logged in user information"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for login and user info"
		},
		{
			"name": "User Registration",
			"item": [
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin2@marketplace.com\",\n    \"password\": \"admin123\",\n    \"first_name\": \"Admin\",\n    \"last_name\": \"Two\",\n    \"phone\": \"1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register/admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"admin"
							]
						},
						"description": "Register a new admin user (development only)"
					},
					"response": []
				},
				{
					"name": "Register Seller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"seller@example.com\",\n    \"password\": \"password123\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"phone\": \"1234567890\",\n    \"business_name\": \"John's Electronics Store\",\n    \"business_type\": \"Electronics Retail\",\n    \"address\": \"123 Main Street, Downtown\",\n    \"city\": \"Mumbai\",\n    \"state\": \"Maharashtra\",\n    \"pincode\": \"400001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register/seller",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"seller"
							]
						},
						"description": "Register a new seller with business information"
					},
					"response": []
				},
				{
					"name": "Register Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"0987654321\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register/customer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"customer"
							]
						},
						"description": "Register a new customer"
					},
					"response": []
				}
			],
			"description": "User registration endpoints for different user types"
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Full Registration & Login Flow",
					"item": [
						{
							"name": "1. Register New Seller",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"techstore@example.com\",\n    \"password\": \"seller123\",\n    \"first_name\": \"Tech\",\n    \"last_name\": \"Store\",\n    \"phone\": \"9876543210\",\n    \"business_name\": \"TechStore Electronics\",\n    \"business_type\": \"Electronics & Gadgets\",\n    \"address\": \"456 Electronic Market, Tech City\",\n    \"city\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"pincode\": \"560001\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/seller",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										"seller"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Login as New Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    pm.environment.set('techstore_token', response.access_token);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"techstore@example.com\",\n    \"password\": \"seller123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get Seller Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{techstore_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/auth/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"me"
									]
								}
							},
							"response": []
						}
					],
					"description": "Complete flow for seller registration and login"
				},
				{
					"name": "Authentication Error Tests",
					"item": [
						{
							"name": "Invalid Login Credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"wrong@email.com\",\n    \"password\": \"wrongpassword\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								},
								"description": "Test with invalid credentials - should return 401"
							},
							"response": []
						},
						{
							"name": "Access Protected Route Without Token",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/auth/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"me"
									]
								},
								"description": "Test accessing protected route without authentication - should return 401"
							},
							"response": []
						},
						{
							"name": "Duplicate Email Registration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"admin@marketplace.com\",\n    \"password\": \"somepassword\",\n    \"first_name\": \"Duplicate\",\n    \"last_name\": \"User\",\n    \"phone\": \"1111111111\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/customer",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										"customer"
									]
								},
								"description": "Test registering with existing email - should return 400"
							},
							"response": []
						}
					],
					"description": "Test various authentication error scenarios"
				}
			],
			"description": "Comprehensive test scenarios for different workflows"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to check response time",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"// Global test to check status code for successful requests",
					"if (pm.response.code >= 200 && pm.response.code < 300) {",
					"    pm.test('Status code is successful', function () {",
					"        pm.response.to.have.status(pm.response.code);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "seller_access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "customer_access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "techstore_token",
			"value": "",
			"type": "string"
		}
	]
} 